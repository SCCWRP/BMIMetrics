library(datatable)
install.packages("data.table")
library(data.table)
?J
?setkey
data.table(metadata)
setkey(metadata, FinalID)
metadata <- data.table(metadata)
setkey(metadata, FinalID)
str(rawdat)
as.numeric(rawdat$LifeStageCode)
head(rawdat$LifeStageCode)
min(rawdat$LifeStageCode)
min(as.numeric(rawdat$LifeStageCode))
?is.R
is.R
is.R()
?ddply
library(plyr)
?ddply
?any
library(testthat)
test_dir("inst/tests/")
traceback()
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
test_dir("inst/tests/")
test_file("inst/tests/test-processing.R")
?test_file
?test_dir
test_dir("inst/tests/", filter="metadata" | "processing")
test_dir("inst/tests/", filter=("metadata" | "processing"))
test_dir("inst/tests/")
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
viewData(aggregate(BMI(bugdata)))
data(bugdata)
viewData(aggregate(BMI(bugdata)))
traceback()
metadata <- loadMetaData()
metadata <- data.table(metadata)
setkey(metadata, FinalID)
###Aggregate FinalID###
x <- BMI(bugdata)
x <- ddply(x, "SampleID", function(df){
ddply(df, "FinalID", function(sdf){
id <- unique(sdf[, !(names(sdf) %in% "BAResult")])
BAResult <- sum(sdf$BAResult)
cbind(id, BAResult)
})
})
x <- join(x, metadata[, c("FinalID", "SAFIT1", "SAFIT2", "TaxonomicEffortLevel",
"SAFIT1_effortlevel", "SAFIT2_effortlevel")], by="FinalID", type="left")
metadata[, c("FinalID", "SAFIT1", "SAFIT2", "TaxonomicEffortLevel",
"SAFIT1_effortlevel", "SAFIT2_effortlevel")]
?data.table
metadata[J("FinalID", "SAFIT1", "SAFIT2", "TaxonomicEffortLevel",
"SAFIT1_effortlevel", "SAFIT2_effortlevel")]
metadata["FinalID", "SAFIT1", "SAFIT2", "TaxonomicEffortLevel",
"SAFIT1_effortlevel", "SAFIT2_effortlevel"]
metadata[, "FinalID", "SAFIT1", "SAFIT2", "TaxonomicEffortLevel",
"SAFIT1_effortlevel", "SAFIT2_effortlevel"]
metadata[, list("FinalID", "SAFIT1", "SAFIT2", "TaxonomicEffortLevel",
"SAFIT1_effortlevel", "SAFIT2_effortlevel")]
metadata[, list(FinalID, SAFIT1, SAFIT2, TaxonomicEffortLevel,
SAFIT1_effortlevel, SAFIT2_effortlevel)]
metadata[j=list("FinalID", "SAFIT1", "SAFIT2", "TaxonomicEffortLevel",
"SAFIT1_effortlevel", "SAFIT2_effortlevel")]
head(metadata)
metadata[,list("FinalID", "SAFIT1", "SAFIT2", "TaxonomicEffortLevel",
"SAFIT1_effortlevel", "SAFIT2_effortlevel")]
metadata[,list(FinalID, "SAFIT1", "SAFIT2", "TaxonomicEffortLevel",
"SAFIT1_effortlevel", "SAFIT2_effortlevel")]
metadata[,list(FinalID, SAFIT1, SAFIT2, TaxonomicEffortLevel,
SAFIT1_effortlevel, SAFIT2_effortlevel)]
names(metadata)
metadata[,list(FinalID, SAFIT1, SAFIT2, TaxonomicLevelCode,
SAFIT1_effortlevel, SAFIT2_effortlevel)]
load("P:/PartTimers/MarkEngeln/BMI_Metrics/inst/metadata.rdata")
viewData(taxonomy)
viewData(metadata)
x <- join(x, metadata[,list(FinalID, SAFIT1, SAFIT2, TaxonomicLevelCode,
SAFIT1_effortlevel, SAFIT2_effortlevel)], by="FinalID", type="left")
names(metadata)
metadata <- data.table(metadata)
setkey(metadata, FinalID)
x <- join(x, metadata[,list(FinalID, SAFIT1, SAFIT2, TaxonomicLevelCode,
SAFIT1_effortlevel, SAFIT2_effortlevel)], by="FinalID", type="left")
x <- join(x, as.data.table(metadata[,list(FinalID, SAFIT1, SAFIT2, TaxonomicLevelCode,
SAFIT1_effortlevel, SAFIT2_effortlevel)]), by="FinalID", type="left")
x <- join(x, as.data.table(metadata[,list(FinalID, SAFIT1, SAFIT2, TaxonomicLevelCode,
SAFIT1_effortlevel, SAFIT2_effortlevel)]), by="FinalID", type="inner")
metadata <- loadMetaData()
x <- join(x, metadata[,list(FinalID, SAFIT1, SAFIT2, TaxonomicLevelCode,
SAFIT1_effortlevel, SAFIT2_effortlevel)], by="FinalID", type="left")
x <- BMI(bugdata)
metadata <- data.table(metadata)
setkey(metadata, FinalID)
merge(x, metadata[,list(FinalID, SAFIT1, SAFIT2, TaxonomicLevelCode,
SAFIT1_effortlevel, SAFIT2_effortlevel)], by="FinalID")
nmaes(metadata)
names(metadata)
metadata <- loadMetaData()
names(metadata)
load("P:/PartTimers/MarkEngeln/BMI_Metrics/inst/metadata.rdata")
metadata <- data.table(metadata)
setkey(metadata, FinalID)
merge(x, metadata[,list(FinalID, SAFIT1, SAFIT2, TaxonomicLevelCode,
SAFIT1_effortlevel, SAFIT2_effortlevel)], by="FinalID")
nrow(x)
x <- join(x, metadata[,list(FinalID, SAFIT1, SAFIT2, TaxonomicLevelCode,
join(x, metadata[,list(FinalID, SAFIT1, SAFIT2, TaxonomicLevelCode,
SAFIT1_effortlevel, SAFIT2_effortlevel)], by="FinalID", type="left")
join(x, as.data.frame(metadata[,list(FinalID, SAFIT1, SAFIT2, TaxonomicLevelCode,
SAFIT1_effortlevel, SAFIT2_effortlevel)]), by="FinalID", type="left")
join(x, as.data.frame(metadata[,list(FinalID, SAFIT1, SAFIT2, TaxonomicLevelCode,
SAFIT1_effortlevel, SAFIT2_effortlevel)]), by="FinalID", type="inner")
?merge.data.table
merge(x, metadata[,list(FinalID, SAFIT1, SAFIT2, TaxonomicLevelCode,
SAFIT1_effortlevel, SAFIT2_effortlevel)], by="FinalID", all.x=T)
merge(x, metadata[,list(FinalID, SAFIT1, SAFIT2, TaxonomicLevelCode,
SAFIT1_effortlevel, SAFIT2_effortlevel)], by="FinalID", all.x=T, all.y=F)
head(merge(x, metadata[,list(FinalID, SAFIT1, SAFIT2, TaxonomicLevelCode,
SAFIT1_effortlevel, SAFIT2_effortlevel)], by="FinalID", all.x=T, all.y=F))
join(x, metadata[,c("FinalID", "SAFIT1", "SAFIT2", "TaxonomicLevelCode",
"SAFIT1_effortlevel", "SAFIT2_effortlevel")], by="FinalID", type="left")
load("P:/PartTimers/MarkEngeln/BMI_Metrics/inst/metadata.rdata")
join(x, metadata[,c("FinalID", "SAFIT1", "SAFIT2", "TaxonomicLevelCode",
"SAFIT1_effortlevel", "SAFIT2_effortlevel")], by="FinalID", type="left")
metadata[,c("FinalID", "SAFIT1", "SAFIT2", "TaxonomicLevelCode",
"SAFIT1_effortlevel", "SAFIT2_effortlevel")]
head(metadata[,c("FinalID", "SAFIT1", "SAFIT2", "TaxonomicLevelCode",
"SAFIT1_effortlevel", "SAFIT2_effortlevel")])
str(metadata[,c("FinalID", "SAFIT1", "SAFIT2", "TaxonomicLevelCode",
"SAFIT1_effortlevel", "SAFIT2_effortlevel")])
join(x, metadata[,c("FinalID", "LifeStageCode", "SAFIT1", "SAFIT2", "TaxonomicLevelCode",
"SAFIT1_effortlevel", "SAFIT2_effortlevel")], by=c("FinalID", "LifeStageCode"), type="left")
str(metadata[,c("FinalID", "LifeStageCode", "SAFIT1", "SAFIT2", "TaxonomicLevelCode",
"SAFIT1_effortlevel", "SAFIT2_effortlevel")])
str(x)
merge(x, metadata[,c("FinalID", "LifeStageCode", "SAFIT1", "SAFIT2", "TaxonomicLevelCode",
"SAFIT1_effortlevel", "SAFIT2_effortlevel")], by=c("FinalID", "LifeStageCode"), type="left")
nrow(merge(x, metadata[,c("FinalID", "LifeStageCode", "SAFIT1", "SAFIT2", "TaxonomicLevelCode",
"SAFIT1_effortlevel", "SAFIT2_effortlevel")], by=c("FinalID", "LifeStageCode"), type="left")
)
test_dir("inst/tests/")
aggregate(bmi)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
aggregate(bmi)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
aggregate(bmi)
load("P:/PartTimers/MarkEngeln/BMI_Metrics/inst/metadata.rdata")
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
aggregate(bmi)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(bmi)
viewData(metadata)
names(x)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(bmi)
traceback()
source('~/.active-rstudio-document', echo=TRUE)
aggregate(bmi)
merge(x, metadata[,c("FinalID", "LifeStageCode", "SAFIT1", "SAFIT2", "TaxonomicLevelCode",
"SAFIT1_effortlevel", "SAFIT2_effortlevel")], by=c("FinalID", "LifeStageCode"), type="left")
source('~/.active-rstudio-document', echo=TRUE)
aggregate(bmi)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(bmi)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(bmi)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(bmi)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(bmi)
which(x[, "SAFIT1"] != "Exclude")
names(x)
x <- merge(x, metadata[,c("FinalID", "LifeStageCode", "SAFIT1", "SAFIT2", "TaxonomicLevelCode",
"SAFIT1_effortlevel", "SAFIT2_effortlevel")], by=c("FinalID", "LifeStageCode"), type="left")
names(x)
which(x[, "SAFIT1"] != "Exclude")
x[which(x[, "SAFIT1"] != "Exclude"),]
source('~/.active-rstudio-document', echo=TRUE)
x[which(x[, "SAFIT1"] != "Exclude"),]
aggregate(bmi)
viewData(bmi)
x
x <- BMI(bugdata)
aggregate(x)
subset(x, SAFIT1 != "Exclude")
subset(x, "SAFIT1" != "Exclude")
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
names(x)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
traceback()
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
traceback()
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
?eval
as.formula()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
traceback()
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
?ddply
?.
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
traceback()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
traceback()
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
as.numeric(x$LifeStageCode)
str(x)
as.numeric(as.factor(x$LifeStageCode))
head(x$LifeStageCode)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
traceback()
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
is.na(x2$FinalID)
which(is.na(x2$FinalID))
names(x2)
is.na(x2$SAFIT1_effortlevel)
viewData(x2)
viewData(x2)
which(is.na(x2$SAFIT1_effortlevel))
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
viewData(x2[1500:nrow(x2),])
viewData(x2[x2$SampleID =="ZRNVHMWOD5/16/20111",])
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
aggregate(x)
unique(x$SampleID)
which(colwise(is.na)(x2))
colwise(is.na)(x2)
colwise(which)(colwise(is.na)(x2))
colwise(is.na)(x2)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
str(x2)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
viewData(`x2`)
row.names(x2)
names(x2)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
viewData(`x2`)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
which(x$SAFIT1 != "Exclude")
which(x2$SAFIT1 != "Exclude")
viewData(x2[which(x2$SAFIT1 != "Exclude"), ])
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
viewData(`x2`)
which(is.na(x2$FinalID))
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
which(is.na(x2$FinalID))
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
?grep
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
viewData(x2)
is.na(x2$FinalID
)
which(is.na(x2$FinalID
))
which(x$SAFIT1 == "Exclude")
which(x2$SAFIT1 == "Exclude")
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
which(is.na(x2$TaxonomicLevelCode))
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
which(is.na(x2$TaxonomicLevelCode))
str(x2)
x2$TaxonomicLevelCode >= x2$SAFIT1_effortlevel
x2$TaxonomicLevelCode > x2$SAFIT1_effortlevel
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
?droplevels
str(x)
str(x2)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
?subset
?grepl
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
aggregate(BMI(rawdat))
na.omit(x)
names(x)
?na.exclude
viewData(x)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
view(x2)
viewDatqa(x2)
viewData(x2)
viewData(x2)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
viewData(x2)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
viewData(x2)
viewData(x2)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
viewData(x2)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
viewData(x2)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
warnings()
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
viewData(x2)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
x2 <- aggregate(x)
viewData(x2)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
viewData(x2)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
x2 <- aggregate(x)
viewData(x2)
viewData(x2[1:nrow(x2)])
viewData(x2[1:nrow(x2)],)
viewData(x2[1:nrow(x2),])
viewData(x2[900:nrow(x2),])
viewData(rawdat)
viewData(rawdata)
test <- aggregate(BMI(rawdata))
view(test)
viewData(test)
?arrange
viewData(arrange(test, SampleID, SAFIT1))
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
test <- aggregate(BMI(rawdata))
viewData(test)
viewData(test)
viewData(test[which(test$distinct_SAFIT1 == "Distinct" & test$distinct_SAFIT2 == "Non-Distinct"),])
rawdata[rawdata$SampleID=="{0B14DC1E-A73F-47A5-A9F6-778F4E175D40}",]
viewData(rawdata[rawdata$SampleID=="{0B14DC1E-A73F-47A5-A9F6-778F4E175D40}",])
viewData(test[test$SampleID=="{0B14DC1E-A73F-47A5-A9F6-778F4E175D40}",])
viewData(rawdata[rawdata$SampleID=="{0B14DC1E-A73F-47A5-A9F6-778F4E175D40}",])
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
test <- aggregate(BMI(rawdata))
library(stringr)
test <- aggregate(BMI(rawdata))
load("P:/PartTimers/MarkEngeln/BMI_Metrics/inst/metadata.rdata")
test <- aggregate(BMI(rawdata))
library(ddply)
library(plyr)
test <- aggregate(BMI(rawdata))
viewData(test)
viewData(rawdat)
rm(list-ls())
rm(list=\ls())
rm(list=ls())
library(BMIMetrics)
rattlesnake <- read.csv("C:/Documents and Settings/gisuser/Desktop/Rattlesnake_data.csv")
viewData(rattlesnake)
viewData(rattlesnake)
rattlesnake$LifeStageCode <- ifelse(rattlesnake$Life.Stage == "Larvae", "L", ifelse(
rattlesnake$Life.Stage == "Adult", "A", ifelse(
rattlesnake$Life.Stage == "Pupae", "P", "X")))
viewData(rattlesnake)
viewData(rattlesnake)
library(plyr)
library(BMIMetrics)
rattlesnake <- rename(rattlesnake, replace=c("StationCode" = "SampleID", "SumOfIndividuals" = "BAResult"))
rs.bmi <- BMI(rattlesnake)
library(BMIMetrics)
rs.bmi <- BMI(rattlesnake)
rs.agg <- aggregate(rs.bmi)
traceback()
library(BMIMetrics)
rs.agg <- aggregate(rs.bmi)
library(BMIMetrics)
rs.agg <- aggregate(rs.bmi)
traceback()
library(BMIMetrics)
rs.agg <- aggregate(rs.bmi)
library(BMIMetrics)
rs.agg <- aggregate(rs.bmi)
library(BMIMetrics)
rs.agg <- aggregate(rs.bmi)
viewData(rs.agg)
library(BMIMetrics)
rs.agg <- aggregate(rs.bmi)
library(BMIMetrics)
rs.metrics <- BMIall(rs.agg)
Acari_Percent(rs.agg)
Acari_Taxa(rs.agg)
Acari_PercentTaxa(rs.agg)
rs.metrics <- BMIall(rs.agg)
library(BMIMetrics)
rs.metrics <- BMIall(rs.agg)
-(seq.int(3, 173, by=2))
library(BMIMetrics)
rs.metrics <- BMIall(rs.agg)
library(BMIMetrics)
rs.metrics <- BMIall(rs.agg)
library(BMIMetrics)
rs.metrics <- BMIall(rs.agg)
viewData(rs.metrics)
library(BMIMetrics)
library(testthat)
test_dir("inst/tests/")
rsvalid <- read.csv("C:/Documents and Settings/gisuser/Desktop/Metrics Combined Locations.csv")
viewData(rsvalid)
viewData(rs.metrics)
viewData(rs.agg)
viewData(rattlesnake)
source('~/.active-rstudio-document', echo=TRUE)
viewData(rattlesnake)
viewData(rs.agg)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
detach(BMIMetrics)
detach(BMIMetric)
detach("BMIMetrics")
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
fix(rs.agg)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
