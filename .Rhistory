rs.agg <- aggregate(rs.bmi)
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
detach(BMIMetrics)
detach(BMIMetric)
detach("BMIMetrics")
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
fix(rs.agg)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
rm(list=ls())
library(BMIMetrics)
library(plyr)
rattlesnake <- read.csv("C:/Documents and Settings/gisuser/Desktop/Rattlesnake_data.csv")
rattlesnake$LifeStageCode <- ifelse(rattlesnake$Life.Stage == "Larvae", "L", ifelse(
rattlesnake$Life.Stage == "Adults", "A", ifelse(
rattlesnake$Life.Stage == "Pupae", "P", "X")))
rattlesnake <- rename(rattlesnake, replace=c("StationCode" = "SampleID", "SumOfIndividuals" = "BAResult"))
rs.bmi <- BMI(rattlesnake)
rs.agg <- aggregate(rs.bmi)
viewData(rs.bmi)
viewData(rs.agg)
library(BMIMetrics)
rs.agg <- aggregate(rs.bmi)
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/loadMetaData.r', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
?setdiff
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
setdiff(c(1, 3), 3)
source('~/.active-rstudio-document', echo=TRUE)
setdiff(c(1, 3), 3)
rs.agg <- aggregate(rs.bmi)
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
?&&
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
viewData(rs.agg)
rs.metrics <- BMIall(rs.agg)
rsvalid <- read.csv("C:/Documents and Settings/gisuser/Desktop/Metrics Combined Locations.csv")
viewData(rsvalid)
melt(rsvalid)
viewData(melt(rsvalid))
viewData(rs.metrics)
viewData(rs.agg)
library(BMIMetrics)
rsraw <- read.csv("C:/Documents and Settings/gisuser/Desktop/rsraw.csv)
rsraw.bmi <- BMI(rsraw)
rsraw <- read.csv("C:/Documents and Settings/gisuser/Desktop/rsraw.csv")
rsraw.bmi <- BMI(rsraw)
rsraw.agg <- aggregate(rsraw.agg)
rsraw.agg <- aggregate(rsraw.bmi)
rsraw.result <- BMIall(rsraw.agg)
viewData(rsraw.agg)
viewData(rsraw)
rsraw <- rename(rsraw, c("Distinct" = "DistinctCode"))
rsraw.bmi <- BMI(rsraw)
rsraw.agg <- aggregate(rsraw.bmi)
rsraw.result <- BMIall(rsraw.agg)
viewData(rsraw.agg)
viewData(rsraw.agg)
source('~/.active-rstudio-document', echo=TRUE)
rsraw.agg <- aggregate(rsraw.bmi)
viewData(rsraw.agg)
library(BMIMetrics)
rsraw.result <- BMIall(rsraw.agg)
viewData(rsraw.result)
viewData(rsvalid)
-c(1, 2, 3)
library(BMIMetrics)
rsall <- read.csv("C:/Documents and Settings/gisuser/Desktop/Base_DATA3.csv")
rsall.bmi <- BMI(rsall)
rsall.agg <- aggregate(rsall.bmi)
rsall.agg <- aggregate(rsall.bmi)
library(BMIMetrics)
rsall.agg <- aggregate(rsall.bmi)
aggregate.bmi
rm(aggregate.BMI)
rsall.agg <- aggregate(rsall.bmi)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
rsall.agg <- aggregate(rsall.bmi)
traceback()
library(BMIMetrics)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
rsall.agg <- aggregate(rsall.bmi)
viewData(rsall.agg)
viewData(rsall.agg)
fix(rsall.agg)
rsall.bmi <- BMI(rsall)
rsall.agg <- aggregate(rsall.bmi)
fix(rs.agg)
fix(rsall.agg)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
rsall.agg <- aggregate(rsall.bmi)
source('~/.active-rstudio-document', echo=TRUE)
rsall.agg <- aggregate(rsall.bmi)
source('~/.active-rstudio-document', echo=TRUE)
rsall.agg <- aggregate(rsall.bmi)
viewData(rsall.agg)
rsall.agg$SAFIT1 == "Exclude"
which(rsall.agg$SAFIT1 == "Exclude")
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
library(BMIMetrics)
rsall.result <- BMIall(rsall.agg)
viewData(rsraw.result)
viewData(rsall.result)
viewData(rsvalid)
plot(rsall.result$Total_Taxa, rsvalid$Taxonomic.Richness)
validate <- merge(rsvalid, rsall.result, by="SampleID")
names(rsvalid)
viewData(rsall)
rsallinfo <- merge(rsall[, c("SampleID", "StationCode", "SampleDate", "CollectionMethoCode", "Replicate")], rsall.result)
rsall[, c("SampleID", "StationCode", "SampleDate", "CollectionMethoCode", "Replicate")]
names(resall)
names(rsall)
rsallinfo <- merge(rsall[, c("SampleID", "StationCode", "SampleDate", "CollectionMethoCode")], rsall.result)
rsall[, c("SampleID", "StationCode", "SampleDate", "CollectionMethoCode")]
rsallinfo <- merge(rsall[, c("SampleID", "StationCode", "SampleDate", "CollectionMethodCode", "Replicate")], rsall.result)
validation <- merge(rsallinfo, read.csv("C:/Documents and Settings/gisuser/Desktop/Metrics Combined Locations.csv"))
validation <- merge(rsallinfo, read.csv("C:/Documents and Settings/gisuser/Desktop/Metrics Combined Locations2.csv"))
names(read.csv("C:/Documents and Settings/gisuser/Desktop/Metrics Combined Locations2.csv"))
viewData(rsallinfo)
rsvalidall <- read.csv("C:/Documents and Settings/gisuser/Desktop/Metrics Combined Locations2.csv")
viewData(rsvalidall)
mdy(rsallinfo$SampleDate)
library(lubridate)
mdy(rsallinfo$SampleDate)
rsallinfo$SampleDate <- mdy(rsallinfo$SampleDate)
dmy(rsvalidall$SampleDate)
viewData(rsallinfo)
rsallinfo <- merge(unique(rsall[, c("SampleID", "StationCode", "SampleDate", "CollectionMethodCode", "Replicate")]), rsall.result)
rsallinfo$SampleDate <- mdy(rsallinfo$SampleDate)
rsvalidall$SampleDate <- dmy(rsvalidall$SampleDate)
validation <- merge(rsallinfo, rsvalidall)
plot(validation$Taxonomic.Richness ~ validation$Total_Taxa)
viewData(validation)
(validation$Taxonomic.Richness - validation$Total_Taxa)
as.character(validation$Taxonomic.Richness) - as.character(validation$Total_Taxa)
as.numeric(as.character(validation$Taxonomic.Richness)) - as.numeric(as.character(validation$Total_Taxa))
viewData(rsvalidall)
which((as.numeric(as.character(validation$Taxonomic.Richness)) - as.numeric(as.character(validation$Total_Taxa)))==-20)
viewData(validation)
viewData(rsall[rsall$SampleID == "{DFDDCFF9-9710-4A5C-8FAC-927DF31FC903}",])
viewData(rsall.agg[rsall.agg$SampleID == "{DFDDCFF9-9710-4A5C-8FAC-927DF31FC903}",])
table(rsall[, c("BAResult", "FinalID")])
table(rsall[, c("BAResult")])
?aggregate
rsall <- read.csv("C:/Documents and Settings/gisuser/Desktop/Full BMI Taxa List.csv")
rsall.bmi <- BMI(rsall)
viewData(rsall)
rsall$SampleID <- paste(rsall$StationCode, rsall$SampleDate, rsall$CollectionMethodCode, rsall$Replicate)
rsall.bmi <- BMI(rsall)
rsall.agg <- aggregate(rsall.bmi)
rsall.result <- BMIall(rsall.agg)
rsallinfo <- merge(unique(rsall[, c("SampleID", "StationCode", "SampleDate", "CollectionMethodCode", "Replicate")]), rsall.result)
rsallinfo$SampleDate <- mdy(rsallinfo$SampleDate)
viewData(rsallinfo)
rsallinfo$SampleDate <- dmy(rsallinfo$SampleDate)
validation <- merge(rsallinfo, rsvalidall)
plot(validation$Taxonomic.Richness ~ validation$Total_Taxa)
plot(as.numeric(as.character(validation$Taxonomic.Richness)) ~ as.numeric(as.character(validation$Total_Taxa)))
viewData(rsall.agg)
which((as.numeric(as.character(validation$Taxonomic.Richness)) - as.numeric(as.character(validation$Total_Taxa))) > 3)
which((as.numeric(as.character(validation$Taxonomic.Richness)) - as.numeric(as.character(validation$Total_Taxa))) > 2)
which((as.numeric(as.character(validation$Taxonomic.Richness)) - as.numeric(as.character(validation$Total_Taxa))) == 0)
which((as.numeric(as.character(validation$Taxonomic.Richness)) - as.numeric(as.character(validation$Total_Taxa))) == 1)
which((as.numeric(as.character(validation$Taxonomic.Richness)) - as.numeric(as.character(validation$Total_Taxa))) == 2)
which((as.numeric(as.character(validation$Taxonomic.Richness)) - as.numeric(as.character(validation$Total_Taxa))) == 3)
viewData(validation)
validation <- arrange(validation, StationCode)
which((as.numeric(as.character(validation$Taxonomic.Richness)) - as.numeric(as.character(validation$Total_Taxa))) > 0)
viewData(validation)
viewData(rsall[rsall$StationCode == "105WLCABC",])
viewData(rsall.agg[rsall.agg$StationCode == "105WLCABC",])
library(testthat)
test_dir("inst/tests/")
load("P:/PartTimers/MarkEngeln/BMI_Metrics/inst/metadata.rdata")
ncol(metadata)
test_dir("inst/tests/")
viewData(rsall)
aggregate.defult
aggregate.default
aggregate.data.frame
?aggregate.data.frame
viewData(rsall)
viewData(aggregate.data.frame(rsall, StationCode))
viewData(aggregate.data.frame(rsall, StationCode, sum))
viewData(aggregate.data.frame(rsall, list(StationCode), sum))
library(reshape)
?reshape
library(reshape2)
names(rsall)
viewData(recast(rsall, FinalID + LifeStageCode ~ BAResult, id.var=1:19))
viewData(recast(rsall, BAResult ~ FinalID + LifeStageCode, id.var=1:19))
recast(rsall, BAResult ~ FinalID + LifeStageCode, id.var=1:19)
names(rsall)
viewData(melt(rsall, id.var=1:19))
viewData(melt(rsall, id.var=1:26))
viewData(melt(rsall, id.var=1:29))
viewData(cast(melt(rsall, id.var=1:29), FinalID ~ variable))
viewData(cast(melt(rsall, id.var=1:29), FinalID ~ variable, sum))
viewData(cast(melt(rsall, id.var=c(1:29, 31:35), FinalID ~ variable, sum))
)
viewData(cast(melt(rsall, id.var=c(1:29, 31:35)), FinalID ~ variable, sum))
viewData(cast(melt(rsall, id.var=c(1:29, 31:35)), StationCode + SampleDate + CollectionMethodCode + Replicate + FinalID ~ variable, sum))
viewData(cast(melt(rsall, id.var=c(1:29, 31:35)), StationCode + SampleDate + CollectionMethodCode + Replicate + FinalID + LifeStageCode ~ variable, sum))
viewData(cast(melt(rsall, id.var=c(1:29, 31:35)), StationCode + SampleDate + CollectionMethodCode + FinalID + LifeStageCode ~ variable, sum))
rsall <- read.csv("C:/Documents and Settings/gisuser/Desktop/Base_DATA.csv")
names(rsall)
rsall <- read.csv("C:/Documents and Settings/gisuser/Desktop/Base_DATA.csv")
names(rsall)
rsallcomp <- cast(melt(rsall, id.var=c(1:9, 11:105)), StationCode + SampleDate + CollectionMethodCode + FinalID + LifeStageCode ~ variable, sum)
viewData(rsallcomp)
rsall <- read.csv("C:/Documents and Settings/gisuser/Desktop/Base_DATA.csv")
rsall <- cast(melt(rsall, id.var=c(1:9, 11:105)), StationCode + SampleDate + CollectionMethodCode + FinalID + LifeStageCode ~ variable, sum)
rsall$SampleID <- paste(rsall$StationCode, rsall$SampleDate, rsall$CollectionMethodCode)
rsall.bmi <- BMI(rsall)
rsall.agg <- aggregate(rsall.bmi)
rsall.result <- BMIall(rsall.agg)
viewData(rsall.result)
rsallinfo <- merge(unique(rsall[, c("SampleID", "StationCode", "SampleDate", "CollectionMethodCode")]), rsall.result)
rsallinfo$SampleDate <- dmy(rsallinfo$SampleDate)
rsallinfo <- merge(unique(rsall[, c("SampleID", "StationCode", "SampleDate", "CollectionMethodCode")]), rsall.result)
rsallinfo$SampleDate <- mdy(rsallinfo$SampleDate)
rsvalidall$SampleDate <- dmy(rsvalidall$SampleDate)
viewData(rsvalidall)
validation <- merge(rsallinfo, rsvalidall)
plot(as.numeric(as.character(validation$Taxonomic.Richness)) ~ as.numeric(as.character(validation$Total_Taxa)))
rsall <- read.csv("C:/Documents and Settings/gisuser/Desktop/Base_DATA.csv")
rsall <- cast(melt(rsall, id.var=c(1:9, 11:105)), StationCode + SampleDate + CollectionMethodCode + Replicate + FinalID + LifeStageCode ~ variable, sum)
rsall$SampleID <- paste(rsall$StationCode, rsall$SampleDate, rsall$CollectionMethodCode)
rsall.bmi <- BMI(rsall)
rsall.agg <- aggregate(rsall.bmi)
rsall.result <- BMIall(rsall.agg)
rsallinfo <- merge(unique(rsall[, c("SampleID", "StationCode", "SampleDate", "CollectionMethodCode", "Replicate")]), rsall.result)
rsvalidall <- read.csv("C:/Documents and Settings/gisuser/Desktop/Metrics Combined Locations2.csv")
rsallinfo$SampleDate <- mdy(rsallinfo$SampleDate)
validation <- merge(rsallinfo, rsvalidall)
plot(as.numeric(as.character(validation$Taxonomic.Richness)) ~ as.numeric(as.character(validation$Total_Taxa)))
rsallinfo$SampleDate <- mdy(rsallinfo$SampleDate)
validation <- merge(rsallinfo, rsvalidall)
rsvalidall$SampleDate <- dmy(rsvalidall$SampleDate)
validation <- merge(rsallinfo, rsvalidall)
plot(as.numeric(as.character(validation$Taxonomic.Richness)) ~ as.numeric(as.character(validation$Total_Taxa)))
viewData(rsvalid)
library(BMIMetrics)
library(BMIMetrics)
?attach
?find
?apropos
?cmdscale
cmdscale
install.packages("labDSV")
install.packages("labdsv")
?try
rm(list=ls())
data <- read.delim("clipboard")
viewData(data)
library(plyr)
data <- rename(data, c("SampleRowID" = "SampleID", "SumOfBAResult" = "BAResult"))
viewData(data)
data$concatID <- paste(data$StationCode, data$SampleDate, data$CollectionMethodCode, data$Replicate)
length(unique(data$concatID))
length(unique(data$SampleID))
viewData(data)
data <- rename(data, c("SampleID" = "SampleRowID", "concatID" = "SampleID"))
length(unique(LabSampleID))
length(unique(data$LabSampleID))
data$concatID <- paste(data$StationCode, data$SampleDate, data$CollectionMethodCode, data$Replicate, data$LabSampleID)
viewData(data)
data$SampleIDID <- paste(data$StationCode, data$SampleDate, data$CollectionMethodCode, data$Replicate, data$LabSampleID)
data$SampleID <- paste(data$StationCode, data$SampleDate, data$CollectionMethodCode, data$Replicate, data$LabSampleID)
viewData(data)
data <- data[, 1:13]
viewData(data)
length(unique(data$SampleID))
library(BMIMetrics)
data.BMI <- BMI(data)
data.agg <- aggregate(data.BMI)
viewData(data.agg)
viewData(data)
distinctmerge <- merge(data, data.agg, by=c("FinalID", "LifeStageCode", "SampleID"))
viewData(distinctmerge)
distinctmerge <- merge(data, data.agg)
viewData(distinctmerge)
viewData(data)
data <- rename(data, c("Distinct" = "DistinctCode"))
data.BMI <- BMI(data)
data.agg <- aggregate(data.BMI)
distinctmerge <- merge(data, data.agg)
viewData(distinctmerge)
str(distinctmerge$distinct_SAFIT2)
str(as.factor(distinctmerge$distinct_SAFIT2))
str(as.numeric(as.factor(distinctmerge$distinct_SAFIT2)))
which((distinctmerge$SAFIT2Distinct ==1 & distinctmerge$distinct_SAFIT2 == "Distinct") || (distinctmerge$SAFIT2Distinct ==0 & distinctmerge$distinct_SAFIT2 == "Non-Distinct"))
which(!((distinctmerge$SAFIT2Distinct ==1 & distinctmerge$distinct_SAFIT2 == "Distinct") || (distinctmerge$SAFIT2Distinct ==0 & distinctmerge$distinct_SAFIT2 == "Non-Distinct")))
distinctmerge$SAFIT2Distinct[which(distinctmerge$SAFIT2Distinct == 1)] <- "Distinct"
distinctmerge$SAFIT2Distinct[which(distinctmerge$SAFIT2Distinct == 0)] <- "Non-Distinct"
viewData(distinctmerge)
which(distinctmerge$SAFIT2Distinct == distinctmerge$distinct_SAFIT2)
which(distinctmerge$SAFIT2Distinct != distinctmerge$distinct_SAFIT2)
load("P:/PartTimers/MarkEngeln/BMI_Metrics/inst/metadata.rdata")
viewData(metadata)
distinctmerge$order <- metadata$Order[match(distinctmerge$FinalID, metadata$FinalID)]
viewData(distinctmerge)
viewData(data)
data.sub <- data[data$SampleID == "103WE0817 14/Jun/2001 BMI_RWB 1 6712",]
viewData(data.sub)
viewData(aggregate(BMI(data.sub)))
source('~/.active-rstudio-document', echo=TRUE)
viewData(aggregate(BMI(data.sub)))
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/loadMetaData.r', echo=TRUE)
viewData(aggregate(BMI(data.sub)))
source('~/.active-rstudio-document', echo=TRUE)
viewData(aggregate(BMI(data.sub)))
source('~/.active-rstudio-document', echo=TRUE)
viewData(aggregate(BMI(data.sub)))
source('~/.active-rstudio-document', echo=TRUE)
viewData(aggregate(BMI(data.sub)))
viewData(distinctmerge)
library(BMIMetrics)
data.BMI <- BMI(data)
data.agg <- aggregate(data)
data.agg <- aggregate(data.BMI)
distinctmerge <- merge(data.agg, data)
viewData(distinctmerge)
distinctmerge <- merge(data, data.agg)
viewData(distinctmerge)
distinctmerge$SAFIT2Distinct[which(distinctmerge$SAFIT2Distinct==0)] <- "Non-Distinct"
viewData(distinctmerge)
distinctmerge$SAFIT2Distinct[which(distinctmerge$SAFIT2Distinct==1)] <- "Distinct"
which(distinctmerge$SAFIT2Distinct != distinctmerge$distinct_SAFIT2)
distinctmerge <- arrange(distinctmerge, SampleID, SAFIT1)
which(distinctmerge$SAFIT2Distinct != distinctmerge$distinct_SAFIT2)
viewData(distinctmerge)
data.sub <- data[data$SampleID =="105WE0583 01/Aug/2001 BMI_CSBP_Trans 1 6903",]
source('~/.active-rstudio-document', echo=TRUE)
data.sub <- data[data$SampleID =="105WE0583 01/Aug/2001 BMI_CSBP_Trans 1 6903",]
aggregate(BMI(data.sub))
viewData(aggregate(BMI(data.sub)))
source('~/.active-rstudio-document', echo=TRUE)
viewData(aggregate(BMI(data.sub)))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
viewData(aggregate(BMI(data.sub)))
library(BMIMetrics)
source('~/.active-rstudio-document', echo=TRUE)
viewData(distinctmerge)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
data.agg <- aggregate(data.BMI)
distinctmerge <- merge(data, data.agg)
distinctmerge$SAFIT2Distinct[which(distinctmerge$SAFIT2Distinct==1)] <- "Distinct"
distinctmerge$SAFIT2Distinct[which(distinctmerge$SAFIT2Distinct==0)] <- "Non-Distinct"
distinctmerge <- arrange(distinctmerge, SampleID, SAFIT1)
which(distinctmerge$SAFIT2Distinct != distinctmerge$distinct_SAFIT2)
viewData(distinctmerge)
source('~/.active-rstudio-document', echo=TRUE)
data.agg <- aggregate(data.BMI)
distinctmerge <- merge(data, data.agg)
distinctmerge$SAFIT2Distinct[which(distinctmerge$SAFIT2Distinct==1)] <- "Distinct"
distinctmerge$SAFIT2Distinct[which(distinctmerge$SAFIT2Distinct==0)] <- "Non-Distinct"
distinctmerge <- arrange(distinctmerge, SampleID, SAFIT1)
which(distinctmerge$SAFIT2Distinct != distinctmerge$distinct_SAFIT2)
library(BMIMetrics)
viewData(distinctmerge)
which(distinctmerge$SAFIT2Distinct != distinctmerge$distinct_SAFIT2)
as.numeric(data$LifeStageCode)
head(as.numeric(data$LifeStageCode))
head(data$LifeStageCode)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
viewData(distinctmerge)
data.sub <- data[data$SampleID =="105WE0583 01/Aug/2001 BMI_CSBP_Trans 1 6903",]
viewData(aggregate(BMI(data.sub)))
source('~/.active-rstudio-document', echo=TRUE)
viewData(aggregate(BMI(data.sub)))
viewData(aggregate(BMI(data.sub)))
source('~/.active-rstudio-document', echo=TRUE)
viewData(aggregate(BMI(data.sub)))
source('~/.active-rstudio-document', echo=TRUE)
viewData(aggregate(BMI(data.sub)))
warnings()
source('~/.active-rstudio-document', echo=TRUE)
viewData(aggregate(BMI(data.sub)))
source('~/.active-rstudio-document', echo=TRUE)
viewData(aggregate(BMI(data.sub)))
source('~/.active-rstudio-document', echo=TRUE)
viewData(aggregate(BMI(data.sub)))
source('~/.active-rstudio-document', echo=TRUE)
viewData(aggregate(BMI(data.sub)))
source('~/.active-rstudio-document', echo=TRUE)
viewData(aggregate(BMI(data.sub)))
source('~/.active-rstudio-document', echo=TRUE)
viewData(aggregate(BMI(data.sub)))
source('~/.active-rstudio-document', echo=TRUE)
viewData(aggregate(BMI(data.sub)))
source('~/.active-rstudio-document', echo=TRUE)
viewData(aggregate(BMI(data.sub)))
source('~/.active-rstudio-document', echo=TRUE)
viewData(aggregate(BMI(data.sub)))
source('~/.active-rstudio-document', echo=TRUE)
viewData(aggregate(BMI(data.sub)))
source('~/.active-rstudio-document', echo=TRUE)
viewData(aggregate(BMI(data.sub)))
source('~/.active-rstudio-document', echo=TRUE)
viewData(aggregate(BMI(data.sub)))
library(BMIMetrics)
source('~/.active-rstudio-document', echo=TRUE)
length(which(distinctmerge$SAFIT2Distinct != distinctmerge$distinct_SAFIT2))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(BMIMetrics)
viewData(distinctmerge)
which(distinctmerge$SAFIT2Distinct != distinctmerge$distinct_SAFIT2)
viewData(distinctmerge[2000:3000,])
viewData(distinctmerge)
write.csv(distinctmerge, file="C:/Documents and Settings/gisuser/Desktop/distinct_comparison.csv")
viewData(distinctmerge[2800:3200,])
viewData(distinctmerge[5000:5200,])
viewData(distinctmerge[6861,])
viewData(distinctmerge[6861,])
?paste0
?data.table
library(data.table)
?data.table
dt <- data.table(data.agg)
class(dt)
viewData(dt)
dt[unique("SAFIT1"), by=SampleID]
dt[,unique("SAFIT1") by=SampleID]
dt[,unique("SAFIT1"), by=SampleID]
dt[,length(unique("SAFIT1")), by=SampleID]
dt[,list(total=.N), by=SampleID]
dt[,.N, by=SampleID]
dt[,.SD[distinct_SAFIT=="Distinct"], by=SampleID]
dt[,.SD["distinct_SAFIT"=="Distinct"], by=SampleID]
?.SD
dt[,lapply(.SD, sum), by=SampleID]
dt[,lapply(.SD, length), by=SampleID]
dt[,.SD
, by=SampleID]
dt["Distinct",.SD, by=SampleID]
dt["Distinct"]
?setkey
setkey(dt, SampleID)
dt["Distinct"]
dt[, .I, by=list(SampleID, distinct_SAFIT1=="Distinct")]
dt[, .N, by=list(SampleID, distinct_SAFIT1=="Distinct")]
subset(dt[, .N, by=list(SampleID, distinct_SAFIT1=="Distinct")], distinct_SAFIT1=T)
subset(dt[, .N, by=list(SampleID, distinct_SAFIT1=="Distinct")], distinct_SAFIT1="TRUE")
subset(dt[, .N, by=list(SampleID, distinct_SAFIT1=="Distinct")], distinct_SAFIT1=="TRUE")
?subset
subset(dt[, .N, by=list(SampleID, distinct_SAFIT1=="Distinct")], distinct_SAFIT1=="TRUE", select=c(SampleID, N))
subset(dt[, .N, by=list(SampleID, distinct_SAFIT1=="Distinct")], distinct_SAFIT1=="TRUE", select=c(SampleID, N))
dt[, .N, by=list(SampleID, distinct_SAFIT1=="Distinct", distinct_SAFIT2=="Distinct")]
dt[, sum(.SD), by=list(SampleID, distinct_SAFIT1=="Distinct", distinct_SAFIT2=="Distinct")]
dt[, .SD, by=list(SampleID, distinct_SAFIT1=="Distinct", distinct_SAFIT2=="Distinct")]
dt[, list(Total=.N[distinct_SAFIT1=="TRUE"]), by=list(SampleID)]
dt[, list(Total=.N), by=list(SampleID)]
dt[, list(Total=nrow(.SD[distinct_SAFIT1=="Distinct"]), by=list(SampleID)]
dt[, list(Total=nrow(.SD[2]), by=list(SampleID)]
dt[, list(Total=.SD[2], by=list(SampleID)]
dt[, list(Total=.SD[2]), by=list(SampleID)]
dt[, .SD[2], by=list(SampleID)]
dt[, .SD[distinct_SAFIT1=="Distinct"], by=list(SampleID)]
system.time(dt[, .SD[distinct_SAFIT1=="Distinct"], by=list(SampleID)])
dt[, .N[distinct_SAFIT1=="Distinct"], by=list(SampleID)]
dt[, .SD[distinct_SAFIT1=="Distinct"], by=list(SampleID)]
dt[, ncol(.SD[distinct_SAFIT1=="Distinct"]), by=list(SampleID)]
dt[, nrow(.SD[distinct_SAFIT1=="Distinct"]), by=list(SampleID)]
dt[, list(total=nrow(.SD[distinct_SAFIT1=="Distinct"])), by=list(SampleID)]
system.time(dt[, list(total=nrow(.SD[distinct_SAFIT1=="Distinct"])), by=list(SampleID)])
system.time(tapply(dt, "SampleID", nrow))
colnames(dt)
system.time(ddply(dt, "SampleID", nrow))
system.time(dt[, list(total=nrow(.SD[distinct_SAFIT1=="Distinct"])), by=SampleID])
system.time(dt[, list(total=nrow(.SD[distinct_SAFIT1=="Distinct"]),
abun=sum(BAResult[distinct_SAFIT1=="Distinct"])), by=SampleID])
dt[, list(total=nrow(.SD[distinct_SAFIT1=="Distinct"]),
abun=sum(BAResult[distinct_SAFIT1=="Distinct"])), by=SampleID]
