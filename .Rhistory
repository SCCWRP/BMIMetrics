viewData(x2[1500:nrow(x2),])
viewData(x2[x2$SampleID =="ZRNVHMWOD5/16/20111",])
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
aggregate(x)
unique(x$SampleID)
which(colwise(is.na)(x2))
colwise(is.na)(x2)
colwise(which)(colwise(is.na)(x2))
colwise(is.na)(x2)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
str(x2)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
viewData(`x2`)
row.names(x2)
names(x2)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
viewData(`x2`)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
which(x$SAFIT1 != "Exclude")
which(x2$SAFIT1 != "Exclude")
viewData(x2[which(x2$SAFIT1 != "Exclude"), ])
source('~/.active-rstudio-document', echo=TRUE)
aggregate(x)
aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
viewData(`x2`)
which(is.na(x2$FinalID))
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
which(is.na(x2$FinalID))
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
?grep
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
viewData(x2)
is.na(x2$FinalID
)
which(is.na(x2$FinalID
))
which(x$SAFIT1 == "Exclude")
which(x2$SAFIT1 == "Exclude")
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
which(is.na(x2$TaxonomicLevelCode))
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
which(is.na(x2$TaxonomicLevelCode))
str(x2)
x2$TaxonomicLevelCode >= x2$SAFIT1_effortlevel
x2$TaxonomicLevelCode > x2$SAFIT1_effortlevel
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
?droplevels
str(x)
str(x2)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
?subset
?grepl
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
aggregate(BMI(rawdat))
na.omit(x)
names(x)
?na.exclude
viewData(x)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
view(x2)
viewDatqa(x2)
viewData(x2)
viewData(x2)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
viewData(x2)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
viewData(x2)
viewData(x2)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
viewData(x2)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
viewData(x2)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
warnings()
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
viewData(x2)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
x2 <- aggregate(x)
viewData(x2)
source('~/.active-rstudio-document', echo=TRUE)
x2 <- aggregate(x)
viewData(x2)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
x2 <- aggregate(x)
viewData(x2)
viewData(x2[1:nrow(x2)])
viewData(x2[1:nrow(x2)],)
viewData(x2[1:nrow(x2),])
viewData(x2[900:nrow(x2),])
viewData(rawdat)
viewData(rawdata)
test <- aggregate(BMI(rawdata))
view(test)
viewData(test)
?arrange
viewData(arrange(test, SampleID, SAFIT1))
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
test <- aggregate(BMI(rawdata))
viewData(test)
viewData(test)
viewData(test[which(test$distinct_SAFIT1 == "Distinct" & test$distinct_SAFIT2 == "Non-Distinct"),])
rawdata[rawdata$SampleID=="{0B14DC1E-A73F-47A5-A9F6-778F4E175D40}",]
viewData(rawdata[rawdata$SampleID=="{0B14DC1E-A73F-47A5-A9F6-778F4E175D40}",])
viewData(test[test$SampleID=="{0B14DC1E-A73F-47A5-A9F6-778F4E175D40}",])
viewData(rawdata[rawdata$SampleID=="{0B14DC1E-A73F-47A5-A9F6-778F4E175D40}",])
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
test <- aggregate(BMI(rawdata))
library(stringr)
test <- aggregate(BMI(rawdata))
load("P:/PartTimers/MarkEngeln/BMI_Metrics/inst/metadata.rdata")
test <- aggregate(BMI(rawdata))
library(ddply)
library(plyr)
test <- aggregate(BMI(rawdata))
viewData(test)
viewData(rawdat)
rm(list-ls())
rm(list=\ls())
rm(list=ls())
library(BMIMetrics)
rattlesnake <- read.csv("C:/Documents and Settings/gisuser/Desktop/Rattlesnake_data.csv")
viewData(rattlesnake)
viewData(rattlesnake)
rattlesnake$LifeStageCode <- ifelse(rattlesnake$Life.Stage == "Larvae", "L", ifelse(
rattlesnake$Life.Stage == "Adult", "A", ifelse(
rattlesnake$Life.Stage == "Pupae", "P", "X")))
viewData(rattlesnake)
viewData(rattlesnake)
library(plyr)
library(BMIMetrics)
rattlesnake <- rename(rattlesnake, replace=c("StationCode" = "SampleID", "SumOfIndividuals" = "BAResult"))
rs.bmi <- BMI(rattlesnake)
library(BMIMetrics)
rs.bmi <- BMI(rattlesnake)
rs.agg <- aggregate(rs.bmi)
traceback()
library(BMIMetrics)
rs.agg <- aggregate(rs.bmi)
library(BMIMetrics)
rs.agg <- aggregate(rs.bmi)
traceback()
library(BMIMetrics)
rs.agg <- aggregate(rs.bmi)
library(BMIMetrics)
rs.agg <- aggregate(rs.bmi)
library(BMIMetrics)
rs.agg <- aggregate(rs.bmi)
viewData(rs.agg)
library(BMIMetrics)
rs.agg <- aggregate(rs.bmi)
library(BMIMetrics)
rs.metrics <- BMIall(rs.agg)
Acari_Percent(rs.agg)
Acari_Taxa(rs.agg)
Acari_PercentTaxa(rs.agg)
rs.metrics <- BMIall(rs.agg)
library(BMIMetrics)
rs.metrics <- BMIall(rs.agg)
-(seq.int(3, 173, by=2))
library(BMIMetrics)
rs.metrics <- BMIall(rs.agg)
library(BMIMetrics)
rs.metrics <- BMIall(rs.agg)
library(BMIMetrics)
rs.metrics <- BMIall(rs.agg)
viewData(rs.metrics)
library(BMIMetrics)
library(testthat)
test_dir("inst/tests/")
rsvalid <- read.csv("C:/Documents and Settings/gisuser/Desktop/Metrics Combined Locations.csv")
viewData(rsvalid)
viewData(rs.metrics)
viewData(rs.agg)
viewData(rattlesnake)
source('~/.active-rstudio-document', echo=TRUE)
viewData(rattlesnake)
viewData(rs.agg)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
detach(BMIMetrics)
detach(BMIMetric)
detach("BMIMetrics")
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
fix(rs.agg)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
rm(list=ls())
library(BMIMetrics)
library(plyr)
rattlesnake <- read.csv("C:/Documents and Settings/gisuser/Desktop/Rattlesnake_data.csv")
rattlesnake$LifeStageCode <- ifelse(rattlesnake$Life.Stage == "Larvae", "L", ifelse(
rattlesnake$Life.Stage == "Adults", "A", ifelse(
rattlesnake$Life.Stage == "Pupae", "P", "X")))
rattlesnake <- rename(rattlesnake, replace=c("StationCode" = "SampleID", "SumOfIndividuals" = "BAResult"))
rs.bmi <- BMI(rattlesnake)
rs.agg <- aggregate(rs.bmi)
viewData(rs.bmi)
viewData(rs.agg)
library(BMIMetrics)
rs.agg <- aggregate(rs.bmi)
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/loadMetaData.r', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
?setdiff
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
setdiff(c(1, 3), 3)
source('~/.active-rstudio-document', echo=TRUE)
setdiff(c(1, 3), 3)
rs.agg <- aggregate(rs.bmi)
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
?&&
source('~/.active-rstudio-document', echo=TRUE)
rs.agg <- aggregate(rs.bmi)
viewData(rs.agg)
rs.metrics <- BMIall(rs.agg)
rsvalid <- read.csv("C:/Documents and Settings/gisuser/Desktop/Metrics Combined Locations.csv")
viewData(rsvalid)
melt(rsvalid)
viewData(melt(rsvalid))
viewData(rs.metrics)
viewData(rs.agg)
library(BMIMetrics)
rsraw <- read.csv("C:/Documents and Settings/gisuser/Desktop/rsraw.csv)
rsraw.bmi <- BMI(rsraw)
rsraw <- read.csv("C:/Documents and Settings/gisuser/Desktop/rsraw.csv")
rsraw.bmi <- BMI(rsraw)
rsraw.agg <- aggregate(rsraw.agg)
rsraw.agg <- aggregate(rsraw.bmi)
rsraw.result <- BMIall(rsraw.agg)
viewData(rsraw.agg)
viewData(rsraw)
rsraw <- rename(rsraw, c("Distinct" = "DistinctCode"))
rsraw.bmi <- BMI(rsraw)
rsraw.agg <- aggregate(rsraw.bmi)
rsraw.result <- BMIall(rsraw.agg)
viewData(rsraw.agg)
viewData(rsraw.agg)
source('~/.active-rstudio-document', echo=TRUE)
rsraw.agg <- aggregate(rsraw.bmi)
viewData(rsraw.agg)
library(BMIMetrics)
rsraw.result <- BMIall(rsraw.agg)
viewData(rsraw.result)
viewData(rsvalid)
-c(1, 2, 3)
library(BMIMetrics)
rsall <- read.csv("C:/Documents and Settings/gisuser/Desktop/Base_DATA3.csv")
rsall.bmi <- BMI(rsall)
rsall.agg <- aggregate(rsall.bmi)
rsall.agg <- aggregate(rsall.bmi)
library(BMIMetrics)
rsall.agg <- aggregate(rsall.bmi)
aggregate.bmi
rm(aggregate.BMI)
rsall.agg <- aggregate(rsall.bmi)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
rsall.agg <- aggregate(rsall.bmi)
traceback()
library(BMIMetrics)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
rsall.agg <- aggregate(rsall.bmi)
viewData(rsall.agg)
viewData(rsall.agg)
fix(rsall.agg)
rsall.bmi <- BMI(rsall)
rsall.agg <- aggregate(rsall.bmi)
fix(rs.agg)
fix(rsall.agg)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
rsall.agg <- aggregate(rsall.bmi)
source('~/.active-rstudio-document', echo=TRUE)
rsall.agg <- aggregate(rsall.bmi)
source('~/.active-rstudio-document', echo=TRUE)
rsall.agg <- aggregate(rsall.bmi)
viewData(rsall.agg)
rsall.agg$SAFIT1 == "Exclude"
which(rsall.agg$SAFIT1 == "Exclude")
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/aggregate.r', echo=TRUE)
library(BMIMetrics)
rsall.result <- BMIall(rsall.agg)
viewData(rsraw.result)
viewData(rsall.result)
viewData(rsvalid)
plot(rsall.result$Total_Taxa, rsvalid$Taxonomic.Richness)
validate <- merge(rsvalid, rsall.result, by="SampleID")
names(rsvalid)
viewData(rsall)
rsallinfo <- merge(rsall[, c("SampleID", "StationCode", "SampleDate", "CollectionMethoCode", "Replicate")], rsall.result)
rsall[, c("SampleID", "StationCode", "SampleDate", "CollectionMethoCode", "Replicate")]
names(resall)
names(rsall)
rsallinfo <- merge(rsall[, c("SampleID", "StationCode", "SampleDate", "CollectionMethoCode")], rsall.result)
rsall[, c("SampleID", "StationCode", "SampleDate", "CollectionMethoCode")]
rsallinfo <- merge(rsall[, c("SampleID", "StationCode", "SampleDate", "CollectionMethodCode", "Replicate")], rsall.result)
validation <- merge(rsallinfo, read.csv("C:/Documents and Settings/gisuser/Desktop/Metrics Combined Locations.csv"))
validation <- merge(rsallinfo, read.csv("C:/Documents and Settings/gisuser/Desktop/Metrics Combined Locations2.csv"))
names(read.csv("C:/Documents and Settings/gisuser/Desktop/Metrics Combined Locations2.csv"))
viewData(rsallinfo)
rsvalidall <- read.csv("C:/Documents and Settings/gisuser/Desktop/Metrics Combined Locations2.csv")
viewData(rsvalidall)
mdy(rsallinfo$SampleDate)
library(lubridate)
mdy(rsallinfo$SampleDate)
rsallinfo$SampleDate <- mdy(rsallinfo$SampleDate)
dmy(rsvalidall$SampleDate)
viewData(rsallinfo)
rsallinfo <- merge(unique(rsall[, c("SampleID", "StationCode", "SampleDate", "CollectionMethodCode", "Replicate")]), rsall.result)
rsallinfo$SampleDate <- mdy(rsallinfo$SampleDate)
rsvalidall$SampleDate <- dmy(rsvalidall$SampleDate)
validation <- merge(rsallinfo, rsvalidall)
plot(validation$Taxonomic.Richness ~ validation$Total_Taxa)
viewData(validation)
(validation$Taxonomic.Richness - validation$Total_Taxa)
as.character(validation$Taxonomic.Richness) - as.character(validation$Total_Taxa)
as.numeric(as.character(validation$Taxonomic.Richness)) - as.numeric(as.character(validation$Total_Taxa))
viewData(rsvalidall)
which((as.numeric(as.character(validation$Taxonomic.Richness)) - as.numeric(as.character(validation$Total_Taxa)))==-20)
viewData(validation)
viewData(rsall[rsall$SampleID == "{DFDDCFF9-9710-4A5C-8FAC-927DF31FC903}",])
viewData(rsall.agg[rsall.agg$SampleID == "{DFDDCFF9-9710-4A5C-8FAC-927DF31FC903}",])
table(rsall[, c("BAResult", "FinalID")])
table(rsall[, c("BAResult")])
?aggregate
rsall <- read.csv("C:/Documents and Settings/gisuser/Desktop/Full BMI Taxa List.csv")
rsall.bmi <- BMI(rsall)
viewData(rsall)
rsall$SampleID <- paste(rsall$StationCode, rsall$SampleDate, rsall$CollectionMethodCode, rsall$Replicate)
rsall.bmi <- BMI(rsall)
rsall.agg <- aggregate(rsall.bmi)
rsall.result <- BMIall(rsall.agg)
rsallinfo <- merge(unique(rsall[, c("SampleID", "StationCode", "SampleDate", "CollectionMethodCode", "Replicate")]), rsall.result)
rsallinfo$SampleDate <- mdy(rsallinfo$SampleDate)
viewData(rsallinfo)
rsallinfo$SampleDate <- dmy(rsallinfo$SampleDate)
validation <- merge(rsallinfo, rsvalidall)
plot(validation$Taxonomic.Richness ~ validation$Total_Taxa)
plot(as.numeric(as.character(validation$Taxonomic.Richness)) ~ as.numeric(as.character(validation$Total_Taxa)))
viewData(rsall.agg)
which((as.numeric(as.character(validation$Taxonomic.Richness)) - as.numeric(as.character(validation$Total_Taxa))) > 3)
which((as.numeric(as.character(validation$Taxonomic.Richness)) - as.numeric(as.character(validation$Total_Taxa))) > 2)
which((as.numeric(as.character(validation$Taxonomic.Richness)) - as.numeric(as.character(validation$Total_Taxa))) == 0)
which((as.numeric(as.character(validation$Taxonomic.Richness)) - as.numeric(as.character(validation$Total_Taxa))) == 1)
which((as.numeric(as.character(validation$Taxonomic.Richness)) - as.numeric(as.character(validation$Total_Taxa))) == 2)
which((as.numeric(as.character(validation$Taxonomic.Richness)) - as.numeric(as.character(validation$Total_Taxa))) == 3)
viewData(validation)
validation <- arrange(validation, StationCode)
which((as.numeric(as.character(validation$Taxonomic.Richness)) - as.numeric(as.character(validation$Total_Taxa))) > 0)
viewData(validation)
viewData(rsall[rsall$StationCode == "105WLCABC",])
viewData(rsall.agg[rsall.agg$StationCode == "105WLCABC",])
library(testthat)
test_dir("inst/tests/")
load("P:/PartTimers/MarkEngeln/BMI_Metrics/inst/metadata.rdata")
ncol(metadata)
test_dir("inst/tests/")
viewData(rsall)
aggregate.defult
aggregate.default
aggregate.data.frame
?aggregate.data.frame
viewData(rsall)
viewData(aggregate.data.frame(rsall, StationCode))
viewData(aggregate.data.frame(rsall, StationCode, sum))
viewData(aggregate.data.frame(rsall, list(StationCode), sum))
library(reshape)
?reshape
library(reshape2)
names(rsall)
viewData(recast(rsall, FinalID + LifeStageCode ~ BAResult, id.var=1:19))
viewData(recast(rsall, BAResult ~ FinalID + LifeStageCode, id.var=1:19))
recast(rsall, BAResult ~ FinalID + LifeStageCode, id.var=1:19)
names(rsall)
viewData(melt(rsall, id.var=1:19))
viewData(melt(rsall, id.var=1:26))
viewData(melt(rsall, id.var=1:29))
viewData(cast(melt(rsall, id.var=1:29), FinalID ~ variable))
viewData(cast(melt(rsall, id.var=1:29), FinalID ~ variable, sum))
viewData(cast(melt(rsall, id.var=c(1:29, 31:35), FinalID ~ variable, sum))
)
viewData(cast(melt(rsall, id.var=c(1:29, 31:35)), FinalID ~ variable, sum))
viewData(cast(melt(rsall, id.var=c(1:29, 31:35)), StationCode + SampleDate + CollectionMethodCode + Replicate + FinalID ~ variable, sum))
viewData(cast(melt(rsall, id.var=c(1:29, 31:35)), StationCode + SampleDate + CollectionMethodCode + Replicate + FinalID + LifeStageCode ~ variable, sum))
viewData(cast(melt(rsall, id.var=c(1:29, 31:35)), StationCode + SampleDate + CollectionMethodCode + FinalID + LifeStageCode ~ variable, sum))
rsall <- read.csv("C:/Documents and Settings/gisuser/Desktop/Base_DATA.csv")
names(rsall)
rsall <- read.csv("C:/Documents and Settings/gisuser/Desktop/Base_DATA.csv")
names(rsall)
rsallcomp <- cast(melt(rsall, id.var=c(1:9, 11:105)), StationCode + SampleDate + CollectionMethodCode + FinalID + LifeStageCode ~ variable, sum)
viewData(rsallcomp)
rsall <- read.csv("C:/Documents and Settings/gisuser/Desktop/Base_DATA.csv")
rsall <- cast(melt(rsall, id.var=c(1:9, 11:105)), StationCode + SampleDate + CollectionMethodCode + FinalID + LifeStageCode ~ variable, sum)
rsall$SampleID <- paste(rsall$StationCode, rsall$SampleDate, rsall$CollectionMethodCode)
rsall.bmi <- BMI(rsall)
rsall.agg <- aggregate(rsall.bmi)
rsall.result <- BMIall(rsall.agg)
viewData(rsall.result)
rsallinfo <- merge(unique(rsall[, c("SampleID", "StationCode", "SampleDate", "CollectionMethodCode")]), rsall.result)
rsallinfo$SampleDate <- dmy(rsallinfo$SampleDate)
rsallinfo <- merge(unique(rsall[, c("SampleID", "StationCode", "SampleDate", "CollectionMethodCode")]), rsall.result)
rsallinfo$SampleDate <- mdy(rsallinfo$SampleDate)
rsvalidall$SampleDate <- dmy(rsvalidall$SampleDate)
viewData(rsvalidall)
validation <- merge(rsallinfo, rsvalidall)
plot(as.numeric(as.character(validation$Taxonomic.Richness)) ~ as.numeric(as.character(validation$Total_Taxa)))
rsall <- read.csv("C:/Documents and Settings/gisuser/Desktop/Base_DATA.csv")
rsall <- cast(melt(rsall, id.var=c(1:9, 11:105)), StationCode + SampleDate + CollectionMethodCode + Replicate + FinalID + LifeStageCode ~ variable, sum)
rsall$SampleID <- paste(rsall$StationCode, rsall$SampleDate, rsall$CollectionMethodCode)
rsall.bmi <- BMI(rsall)
rsall.agg <- aggregate(rsall.bmi)
rsall.result <- BMIall(rsall.agg)
rsallinfo <- merge(unique(rsall[, c("SampleID", "StationCode", "SampleDate", "CollectionMethodCode", "Replicate")]), rsall.result)
rsvalidall <- read.csv("C:/Documents and Settings/gisuser/Desktop/Metrics Combined Locations2.csv")
rsallinfo$SampleDate <- mdy(rsallinfo$SampleDate)
validation <- merge(rsallinfo, rsvalidall)
plot(as.numeric(as.character(validation$Taxonomic.Richness)) ~ as.numeric(as.character(validation$Total_Taxa)))
rsallinfo$SampleDate <- mdy(rsallinfo$SampleDate)
validation <- merge(rsallinfo, rsvalidall)
rsvalidall$SampleDate <- dmy(rsvalidall$SampleDate)
validation <- merge(rsallinfo, rsvalidall)
plot(as.numeric(as.character(validation$Taxonomic.Richness)) ~ as.numeric(as.character(validation$Total_Taxa)))
viewData(rsvalid)
library(BMIMetrics)
library(BMIMetrics)
?attach
?find
?apropos
