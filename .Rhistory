control = cforest_unbiased(ntree = 50))
### estimate conditional Kaplan-Meier curves
treeresponse(bst, newdata = GBSG2[1:2,], OOB = TRUE)
### if you can't resist to look at individual trees ...
party:::prettytree(bst@ensemble[[1]], names(bst@data@get("input")))
}
party:::prettytree(bst@ensemble[[1]], names(bst@data@get("input")))
id_trafo
?id_trafo
?ff_trafo
iris.cf <- cforest(Species ~ ., data = iris,
control = cforest_unbiased(mtry = 2))
iris.mds <- cmdscale(1 - proximity(iris.cf), eig = TRUE)
op <- par(pty="s")
pairs(cbind(iris[,1:4], iris.mds$points), cex = 0.6, gap = 0,
col = c("red", "green", "blue")[as.numeric(iris$Species)],
main = "Iris Data: Predictors and MDS of Proximity Based on cforest")
par(op)
?cforest_unbiased
?system.file
(system.file("metadata.rdata", package="BMIMetrics")
)
build("../BMI_Metrics/", path=".")
library(devtools)
build("../BMI_Metrics/", path=".")
install.packages("BMIMetrics_0.1.tar.gz", repos=NULL, type="source")
library(BMIMetrics)
?BMIMetrics
data(bugdata)
bugdata <- BMI(bugdata)
bugdata.agg <- aggregate(bugdata)
bugdata.prc <- sample(bugdata.agg)
metrics <- BMIall(bugdata.prc)
View(metrics)
BMI
load("P:/PartTimers/MarkEngeln/BMI_Metrics/inst/metadata.rdata")
View(metadata)
?select
metadata[metadata$FinalID=="Pacifastacus nigrescens",]
metadata[metadata$FinalID=="Pacifastacus nigrescens", "Invasive"]
metadata[metadata$FinalID=="Pacifastacus nigrescens", "Invasive"] <- 0
save(metadata, file="inst/metadata.rdata")
library(devtools)
build("../BMI_Metrics/", path=".")
install.packages("BMIMetrics_0.1.tar.gz", repos=NULL, type="source")
library(BMIMetrics)
?BMIMetrics
?BMIMetrics
library(BMIMetrics)
?BMIMetrics
data(bugdata)
bugdata <- BMI(bugdata)
bugdata.agg <- aggregate(bugdata)
bugdata.prc <- sample(bugdata.agg)
metrics <- BMIall(bugdata.prc)
View(metrics)
system.file("metadata.rdata", package="BMIMetrics")
load("P:/PartTimers/MarkEngeln/BMI_Metrics/data/bugdata.rdata")
viewData(bugdata)
viewData(tail(bugdata))
rm(bugdata)
load("P:/PartTimers/MarkEngeln/BMI_Metrics/inst/metadata.rdata")
viewData(tail(metadata))
names(metadata)
?append
read.delim("clipboard")
read.delim("clipboard", header=F)
metadata[nrow(metadata) + 1, ] <- read.delim("clipboard", header=F)
viewData(tail(metadata))
metadata[nrow(metadata) + 1, ] <- as.character(read.delim("clipboard", header=F))
viewData(tail(metadata))
metadata <- metadata[1:nrow(metadata)-2,]
metadata <- metadata[1:(nrow(metadata)-2),]
viewData(tail(metadata))
add <- read.delim("clipboard", header=F)
add
str(add)
add <- read.delim("clipboard", header=F, stringsAsFactor=F)
str(add)
tail(rbind(metadata, add))
names(add) <- names(metadata)
tail(rbind(metadata, add))
metadata <- rbind(metadata, add)
viewData(metadata)
viewData(tail(metadata))
save(metadata, file="inst/metadata.rdata")
library(BMIMetrics)
library(testthat)
test_dir("inst/tests/")
load("P:/PartTimers/MarkEngeln/BMI_Metrics/inst/metadata.rdata")
viewData(tail(metadata))
str(metadata)
metadata$ToleranceValue <- as.numeric(metadata$ToleranceValue)
save(metadata, file="inst/metadata.rdata")
metadata$TaxonomicLevelCode <- as.numeric(metadata$TaxonomicLevelCode)
save(metadata, file="inst/metadata.rdata")
viewData(metadata)
nrow(metadata)
test_dir("inst/tests/")
data(bugdata)
bugdata <- BMI(bugdata)
bugdata.agg <- aggregate(bugdata)
Tolerancevalue(bugdata.agg)
ToleranceValue(bugdata.agg)
traceback()
ToleranceValue.BMIagg <- function(x){
metadata <- loadMetaData()
x <- merge(x, metadata[, c("FinalID", "LifeStageCode", "ToleranceValue")])
ddply(x[x$BAResult >0, ], "SampleID", function(df){
p <- !is.na(df$ToleranceValue)
sum(df$BAResult[p] * as.numeric(df$ToleranceValue[p]), na.rm=T)/sum(df$BAResult[p])
})
}
ToleranceValue(bugdata.agg)
test_dir("inst/tests/")
library(BMIMetrics)
detach("package:BMIMetrics", unload=TRUE)
dev_mode()
library(devtools)
dev_mode()
library(BMIMetrics)
dev_mode()
library(BMIMetrics)
system.file("metadata.rdata", package="BMIMetrics")
?match
library(BMIMetrics)
bugs2 <- read.csv("C:/Documents and Settings/gisuser/Desktop/bugs2.csv")
viewData(bugs2)
BMI <- BMI(bugs2)
viewData(bugs2[bugs2$FinalID="",])
viewData(bugs2[bugs2$FinalID=="",])
bugs2[bugs2$FinalID=="",])
bugs2[bugs2$FinalID=="",]
bugs2[bugs2$FinalID=="Ceratopogoninae",]
bugs2[is.na(bugs$FinalID),]
bugs2[is.na(bugs2$FinalID),]
bugs2[bugs2$FinalID==" ",]
bugs2[bugs2$FinalID=="",]
library(BMIMetrics)
BMI <- BMI(bugs2)
data(bugdata)
BMI(bugdata)
BMI(bugs2)
library(BMIMetrics)
BMI(bugs2)
BMI(bugs2)
library(BMIMetrics)
unique(bugs2$FinalID)
length(unique(bugs2$FinalID))
unique(bugs2$FinalID)
library(BMIMetrics)
BMI(bugs2)
library(BMIMetrics)
BMI(bugs2)
results <- BMIall(sample(aggregate(BMI(bugs2))))
BMI <- BMI(bugs2)
agg <- aggregate(BMI)
View(agg)
viewData(agg)
BMI <- BMI(bugs2)
viewData(BMI)
str(bugs2)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/BMI.r', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
BMI <- BMI(bugs2)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/loadMetaData.r', echo=TRUE)
BMI <- BMI(bugs2)
source('~/.active-rstudio-document', echo=TRUE)
BMI <- BMI(bugs2)
source('~/.active-rstudio-document', echo=TRUE)
BMI <- BMI(bugs2)
source('~/.active-rstudio-document', echo=TRUE)
BMI <- BMI(bugs2)
tail(bugs2)
source('~/.active-rstudio-document', echo=TRUE)
tail(bugs2)
BMI <- BMI(bugs2)
source('~/.active-rstudio-document', echo=TRUE)
BMI <- BMI(bugs2)
fix(BMI)
viewData(BMI)
viewData(bugs2)
source('~/.active-rstudio-document', echo=TRUE)
BMI <- BMI(bugs2)
viewData(BMI)
is.na(BMI$FinalID)
sum(is.na(BMI$FinalID))
source('~/.active-rstudio-document', echo=TRUE)
library(BMIMetrics)
rm(list=ls())
bugs2 <- read.csv("C:/Documents and Settings/gisuser/Desktop/bugs2.csv")
viewData(bugs2)
BMI <- BMI(bugs2)
viewData(BMI
)
agg <- aggregate(BMI)
viewData(agg)
samp <- sample(agg)
viewData(samp)
results <- BMIall(samp)
traceback()
Shannon_Diversity(samp)
traceback()
viewData(samp)
Shannon_Diversity(samp[samp$SampleID=="101WE1111101WE111137474BMI_RWB1", ])
ddply(samp, "SampleID", function(df)sum(df$BAResult.subsample))
which(ddply(samp, "SampleID", function(df)sum(df$BAResult.subsample))[, 2] == 0)
Shannon_Diversity(samp[samp$SampleID %in% unique(samp$SampleID)[1:50], ])
Shannon_Diversity(samp[samp$SampleID %in% unique(samp$SampleID)[1:100], ])
length(unique(samp$SampleID))
Shannon_Diversity(samp[samp$SampleID %in% unique(samp$SampleID)[1:2000], ])
Shannon_Diversity(samp[samp$SampleID %in% unique(samp$SampleID)[1:1000], ])
Shannon_Diversity(samp[samp$SampleID %in% unique(samp$SampleID)[1:500], ])
Shannon_Diversity(samp[samp$SampleID %in% unique(samp$SampleID)[1:750], ])
Shannon_Diversity(samp[samp$SampleID %in% unique(samp$SampleID)[1:625], ])
Shannon_Diversity(samp[samp$SampleID %in% unique(samp$SampleID)[1:815], ])
Shannon_Diversity(samp[samp$SampleID %in% unique(samp$SampleID)[1:925], ])
sapply(816:924, function(i)Shannon_Diversity(samp[samp$SampleID %in% unique(samp$SampleID)[i], ])
)
for(i in 816:924)Shannon_Diversity(samp[samp$SampleID %in% unique(samp$SampleID)[i], ])
for(i in 816:924)print(Shannon_Diversity(samp[samp$SampleID %in% unique(samp$SampleID)[i], ]))
for(i in 816:924){
print(i)
print(Shannon_Diversity(samp[samp$SampleID %in% unique(samp$SampleID)[i], ]))
}
viewData(samp[samp$SampleID==unique(samp$SampleID)[837], ])
Shannon_Diversity(samp[samp$SampleID==unique(samp$SampleID)[837], ])
Shannon_Diversity(samp[samp$SampleID==unique(samp$SampleID)[836], ])
viewData(samp[samp$SampleID==unique(samp$SampleID)[836], ])
save(agg)
save(agg, file="agg.rdata")
save(samp, file="samp.rdata")
Simpson_Diversity(samp[samp$SampleID==unique(samp$SampleID)[836], ])
library(testthat)
test_dir("inst/tests/")
rm(list=ls())
library(BMIMetrics)
load("P:/PartTimers/MarkEngeln/BMI_Metrics/samp.rdata")
results <- BMIall(samp)
Simpson_Diversity(samp[samp$SampleID==unique(samp$SampleID)[836], ])
Simpson_Diversity(samp[samp$SampleID==unique(samp$SampleID)[837], ])
Shannon_Diversity(samp[samp$SampleID==unique(samp$SampleID)[836], ])
traceback()
for(i in 1:4000){
print(i)
print(Shannon_Diversity(samp[samp$SampleID %in% unique(samp$SampleID)[i], ]))
}
viewData(samp[samp$SampleID==unique(samp$SampleID)[1508], ])
diversity
diversity(samp[samp$SampleID==unique(samp$SampleID)[1508], "BAResult.subsample"])
?diversity
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/Total_Taxa.r', echo=TRUE)
Shannon_Diversity(samp)
rm(list=ls())
load("P:/PartTimers/MarkEngeln/BMI_Metrics/samp.rdata")
library(BMIMetrics)
results <- BMIall(samp)
traceback()
nrow(Shannon_Diversity(samp))
nrow(Total_Taxa(samp))
nrow(Acari_Percent(samp))
nrow(Coleoptera_Percent(samp))
nrow(Shredder_Percent(samp))
nrow(Shredder_PercentTaxa(samp))
source('~/.active-rstudio-document', echo=TRUE)
results <- BMIall(samp)
source('P:/PartTimers/MarkEngeln/BMI_Metrics/R/loadMetaData.r', echo=TRUE)
results <- BMIall(samp)
?merge
?Reduce
test_dir("inst/tests/")
test_dir("inst/tests/")
head(Acari_Percent(samp))
test_dir("inst/tests/")
test_dir("inst/tests/")
test_dir("inst/tests/")
samp2 <- samp[1:200, ]
BMIall(samp2)
source('~/.active-rstudio-document', echo=TRUE)
viewData(BMIall(samp2))
source('~/.active-rstudio-document', echo=TRUE)
viewData(BMIall(samp2))
source('~/.active-rstudio-document', echo=TRUE)
viewData(BMIall(samp2))
?merge
source('~/.active-rstudio-document', echo=TRUE)
viewData(BMIall(samp2))
source('~/.active-rstudio-document', echo=TRUE)
viewData(BMIall(samp2))
source('~/.active-rstudio-document', echo=TRUE)
viewData(BMIall(samp2))
source('~/.active-rstudio-document', echo=TRUE)
viewData(BMIall(samp2))
source('~/.active-rstudio-document', echo=TRUE)
viewData(BMIall(samp2))
source('~/.active-rstudio-document', echo=TRUE)
viewData(BMIall(samp2))
test1 <- BMIall(samp2)
names(test1)
length(names(test1))
?seq
seq.int(3, 173, by=2)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
test1 <- BMIall(samp2)
viewData(test1)
source('~/.active-rstudio-document', echo=TRUE)
test1 <- BMIall(samp2)
viewData(test1)
test_dir("inst/tests/")
test_dir("inst/tests/")
rm(list=ls())
load("P:/PartTimers/MarkEngeln/BMI_Metrics/samp.rdata")
library(BMIMetrics)
result <- BMIall(samp)
BMIall
?cbind
result <- BMIall(samp)
library(BMIMetrics)
result <- BMIall(samp)
viewData(result)
BMIall
ncol(result)
names(result) <- c("SampleID",
"Acari_Percent",
"Acari_PercentTaxa",
"Acari_Taxa",
"Amphipoda_Percent",
"Burrower_Percent",
"Burrower_PercentTaxa",
"Burrower_Taxa",
"CFCG_Percent",
"CFCG_PercentTaxa",
"CFCG_Taxa",
"Chironomidae_PercentTaxa",
"Chironomidae_Taxa",
"Chironominae_Percent",
"Chironominae_PercentOfMidges",
"Climber_Percent",
"Climber_PercentTaxa",
"Climber_Taxa",
"Clinger_Percent",
"Clinger_PercentTaxa",
"Clinger_Taxa",
"Coleoptera_Percent",
"Coleoptera_PercentTaxa_SAFIT1",
"Coleoptera_PercentTaxa_SAFIT2",
"Coleoptera_Taxa_SAFIT1",
"Coleoptera_Taxa_SAFIT2",
"Crustacea_Percent",
"Diptera_Percent",
"Diptera_PercentTaxa_SAFIT1",
"Diptera_PercentTaxa_SAFIT2",
"Diptera_Taxa_SAFIT1",
"Diptera_Taxa_SAFIT2",
"EPT_Percent",
"EPT_PercentTaxa_SAFIT1",
"EPT_PercentTaxa_SAFIT2",
"EPT_Taxa_SAFIT1",
"EPT_Taxa_SAFIT2",
"Ephemeroptera_Percent",
"Ephemeroptera_PercentTaxa_SAFIT1",
"Ephemeroptera_PercentTaxa_SAFIT2",
"Ephemeroptera_Taxa_SAFIT1",
"Ephemeroptera_Taxa_SAFIT2",
"Intolerant_Percent",
"Intolerant_PercentTaxa",
"Intolerant_Taxa",
"Invasive_Percent",
"Invasive_PercentTaxa",
"Invasive_Taxa",
"Noninsect_Percent",
"Noninsect_PercentTaxa_SAFIT1",
"Noninsect_PercentTaxa_SAFIT2",
"Noninsect_Taxa_SAFIT1",
"Noninsect_Taxa_SAFIT2",
"Orthocladiinae_PercentOfMidges",
"Ostracoda_Percent",
"Plecoptera_Percent",
"Plecoptera_PercentTaxa_SAFIT1",
"Plecoptera_PercentTaxa_SAFIT2",
"Plecoptera_Taxa_SAFIT1",
"Plecoptera_Taxa_SAFIT2",
"Predator_Percent",
"Predator_PercentTaxa",
"Predator_Taxa",
"Scraper_Percent",
"Scraper_PercentTaxa",
"Scraper_Taxa",
"Shredder_Percent",
"Shredder_PercentTaxa",
"Shredder_Taxa",
"Shannon_Diversity_SAFIT1",
"Shannon_Diversity_SAFIT2",
"Simpson_Diversity_SAFIT1",
"Simpson_Diversity_SAFIT2",
"Swimmer_Percent",
"Swimmer_PercentTaxa",
"Swimmer_Taxa",
"Tanypodinae_Percent",
"Tanypodinae_PercentOfMidges",
"ToleranceValue",
"Tolerant_Percent",
"Tolerant_PercentTaxa",
"Tolerant_Taxa",
"Total_Taxa",
"Trichoptera_Percent",
"Trichoptera_PercentTaxa_SAFIT1",
"Trichoptera_PercentTaxa_SAFIT2",
"Trichoptera_Taxa_SAFIT1",
"Trichoptera_Taxa_SAFIT2")
viewData(result)
names(result)
colnames(result)
colnames(result) <- c("SampleID",
"Acari_Percent",
"Acari_PercentTaxa",
"Acari_Taxa",
"Amphipoda_Percent",
"Burrower_Percent",
"Burrower_PercentTaxa",
"Burrower_Taxa",
"CFCG_Percent",
"CFCG_PercentTaxa",
"CFCG_Taxa",
"Chironomidae_PercentTaxa",
"Chironomidae_Taxa",
"Chironominae_Percent",
"Chironominae_PercentOfMidges",
"Climber_Percent",
"Climber_PercentTaxa",
"Climber_Taxa",
"Clinger_Percent",
"Clinger_PercentTaxa",
"Clinger_Taxa",
"Coleoptera_Percent",
"Coleoptera_PercentTaxa_SAFIT1",
"Coleoptera_PercentTaxa_SAFIT2",
"Coleoptera_Taxa_SAFIT1",
"Coleoptera_Taxa_SAFIT2",
"Crustacea_Percent",
"Diptera_Percent",
"Diptera_PercentTaxa_SAFIT1",
"Diptera_PercentTaxa_SAFIT2",
"Diptera_Taxa_SAFIT1",
"Diptera_Taxa_SAFIT2",
"EPT_Percent",
"EPT_PercentTaxa_SAFIT1",
"EPT_PercentTaxa_SAFIT2",
"EPT_Taxa_SAFIT1",
"EPT_Taxa_SAFIT2",
"Ephemeroptera_Percent",
"Ephemeroptera_PercentTaxa_SAFIT1",
"Ephemeroptera_PercentTaxa_SAFIT2",
"Ephemeroptera_Taxa_SAFIT1",
"Ephemeroptera_Taxa_SAFIT2",
"Intolerant_Percent",
"Intolerant_PercentTaxa",
"Intolerant_Taxa",
"Invasive_Percent",
"Invasive_PercentTaxa",
"Invasive_Taxa",
"Noninsect_Percent",
"Noninsect_PercentTaxa_SAFIT1",
"Noninsect_PercentTaxa_SAFIT2",
"Noninsect_Taxa_SAFIT1",
"Noninsect_Taxa_SAFIT2",
"Orthocladiinae_PercentOfMidges",
"Ostracoda_Percent",
"Plecoptera_Percent",
"Plecoptera_PercentTaxa_SAFIT1",
"Plecoptera_PercentTaxa_SAFIT2",
"Plecoptera_Taxa_SAFIT1",
"Plecoptera_Taxa_SAFIT2",
"Predator_Percent",
"Predator_PercentTaxa",
"Predator_Taxa",
"Scraper_Percent",
"Scraper_PercentTaxa",
"Scraper_Taxa",
"Shredder_Percent",
"Shredder_PercentTaxa",
"Shredder_Taxa",
"Shannon_Diversity_SAFIT1",
"Shannon_Diversity_SAFIT2",
"Simpson_Diversity_SAFIT1",
"Simpson_Diversity_SAFIT2",
"Swimmer_Percent",
"Swimmer_PercentTaxa",
"Swimmer_Taxa",
"Tanypodinae_Percent",
"Tanypodinae_PercentOfMidges",
"ToleranceValue",
"Tolerant_Percent",
"Tolerant_PercentTaxa",
"Tolerant_Taxa",
"Total_Taxa",
"Trichoptera_Percent",
"Trichoptera_PercentTaxa_SAFIT1",
"Trichoptera_PercentTaxa_SAFIT2",
"Trichoptera_Taxa_SAFIT1",
"Trichoptera_Taxa_SAFIT2")
viewData(result)
write.csv(result, file="C:/Documents and Settings/gisuser/Desktop/full_metrics.csv")
t1 <- Acari_Percent(samp)
t2 <- Acari_PercentTaxa(samp)
setdiff(t1[, 1], t2[, 1])
rm(list-ls())
rm(list=ls())
fullbugs <- read.csv("C:/Documents and Settings/gisuser/Desktop/bugs.sub.csv")
bmi <- BMI(fullbugs)
library(BMIMetrics)
